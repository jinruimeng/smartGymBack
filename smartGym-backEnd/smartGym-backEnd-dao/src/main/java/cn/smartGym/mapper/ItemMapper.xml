<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.smartGym.mapper.ItemMapper">
  <resultMap id="BaseResultMap" type="cn.smartGym.pojo.Item">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="game" jdbcType="VARCHAR" property="game" />
    <result column="category" jdbcType="VARCHAR" property="category" />
    <result column="item" jdbcType="VARCHAR" property="item" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="path_num" jdbcType="INTEGER" property="pathNum" />
    <result column="date" jdbcType="TIMESTAMP" property="date" />
    <result column="place" jdbcType="VARCHAR" property="place" />
    <result column="participant_num" jdbcType="INTEGER" property="participantNum" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="updated" jdbcType="TIMESTAMP" property="updated" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="type_id" jdbcType="BIGINT" property="typeId" />
    <result column="rank_criterion" jdbcType="INTEGER" property="rankCriterion" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, game, category, item, gender, path_num, date, place, participant_num, status, 
    created, updated, description, type, type_id, rank_criterion
  </sql>
  <select id="selectByExample" parameterType="cn.smartGym.pojo.ItemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from item
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from item
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.smartGym.pojo.ItemExample">
    delete from item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.smartGym.pojo.Item">
    insert into item (id, game, category, 
      item, gender, path_num, 
      date, place, participant_num, 
      status, created, updated, 
      description, type, type_id, 
      rank_criterion)
    values (#{id,jdbcType=BIGINT}, #{game,jdbcType=VARCHAR}, #{category,jdbcType=VARCHAR}, 
      #{item,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}, #{pathNum,jdbcType=INTEGER}, 
      #{date,jdbcType=TIMESTAMP}, #{place,jdbcType=VARCHAR}, #{participantNum,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{created,jdbcType=TIMESTAMP}, #{updated,jdbcType=TIMESTAMP}, 
      #{description,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{typeId,jdbcType=BIGINT}, 
      #{rankCriterion,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.smartGym.pojo.Item">
    insert into item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="game != null">
        game,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="item != null">
        item,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="pathNum != null">
        path_num,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="place != null">
        place,
      </if>
      <if test="participantNum != null">
        participant_num,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="updated != null">
        updated,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="rankCriterion != null">
        rank_criterion,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="game != null">
        #{game,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="item != null">
        #{item,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="pathNum != null">
        #{pathNum,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="place != null">
        #{place,jdbcType=VARCHAR},
      </if>
      <if test="participantNum != null">
        #{participantNum,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=BIGINT},
      </if>
      <if test="rankCriterion != null">
        #{rankCriterion,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.smartGym.pojo.ItemExample" resultType="java.lang.Long">
    select count(*) from item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update item
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.game != null">
        game = #{record.game,jdbcType=VARCHAR},
      </if>
      <if test="record.category != null">
        category = #{record.category,jdbcType=VARCHAR},
      </if>
      <if test="record.item != null">
        item = #{record.item,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=INTEGER},
      </if>
      <if test="record.pathNum != null">
        path_num = #{record.pathNum,jdbcType=INTEGER},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=TIMESTAMP},
      </if>
      <if test="record.place != null">
        place = #{record.place,jdbcType=VARCHAR},
      </if>
      <if test="record.participantNum != null">
        participant_num = #{record.participantNum,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updated != null">
        updated = #{record.updated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.typeId != null">
        type_id = #{record.typeId,jdbcType=BIGINT},
      </if>
      <if test="record.rankCriterion != null">
        rank_criterion = #{record.rankCriterion,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update item
    set id = #{record.id,jdbcType=BIGINT},
      game = #{record.game,jdbcType=VARCHAR},
      category = #{record.category,jdbcType=VARCHAR},
      item = #{record.item,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=INTEGER},
      path_num = #{record.pathNum,jdbcType=INTEGER},
      date = #{record.date,jdbcType=TIMESTAMP},
      place = #{record.place,jdbcType=VARCHAR},
      participant_num = #{record.participantNum,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      created = #{record.created,jdbcType=TIMESTAMP},
      updated = #{record.updated,jdbcType=TIMESTAMP},
      description = #{record.description,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      type_id = #{record.typeId,jdbcType=BIGINT},
      rank_criterion = #{record.rankCriterion,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.smartGym.pojo.Item">
    update item
    <set>
      <if test="game != null">
        game = #{game,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="item != null">
        item = #{item,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="pathNum != null">
        path_num = #{pathNum,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="place != null">
        place = #{place,jdbcType=VARCHAR},
      </if>
      <if test="participantNum != null">
        participant_num = #{participantNum,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=BIGINT},
      </if>
      <if test="rankCriterion != null">
        rank_criterion = #{rankCriterion,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.smartGym.pojo.Item">
    update item
    set game = #{game,jdbcType=VARCHAR},
      category = #{category,jdbcType=VARCHAR},
      item = #{item,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      path_num = #{pathNum,jdbcType=INTEGER},
      date = #{date,jdbcType=TIMESTAMP},
      place = #{place,jdbcType=VARCHAR},
      participant_num = #{participantNum,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP},
      description = #{description,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      type_id = #{typeId,jdbcType=BIGINT},
      rank_criterion = #{rankCriterion,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="cn.smartGym.pojo.Item">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="game" jdbcType="VARCHAR" property="game" />
    <result column="category" jdbcType="VARCHAR" property="category" />
    <result column="item" jdbcType="VARCHAR" property="item" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="path_num" jdbcType="INTEGER" property="pathNum" />
    <result column="date" jdbcType="TIMESTAMP" property="date" />
    <result column="place" jdbcType="VARCHAR" property="place" />
    <result column="participant_num" jdbcType="INTEGER" property="participantNum" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="updated" jdbcType="TIMESTAMP" property="updated" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="type_id" jdbcType="BIGINT" property="typeId" />
    <result column="rank_criterion" jdbcType="INTEGER" property="rankCriterion" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, game, category, item, gender, path_num, date, place, participant_num, status, 
    created, updated, description, type, type_id, rank_criterion
  </sql>
  <select id="selectByExample" parameterType="cn.smartGym.pojo.ItemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from item
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from item
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.smartGym.pojo.ItemExample">
    delete from item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.smartGym.pojo.Item">
    insert into item (id, game, category, 
      item, gender, path_num, 
      date, place, participant_num, 
      status, created, updated, 
      description, type, type_id, 
      rank_criterion)
    values (#{id,jdbcType=BIGINT}, #{game,jdbcType=VARCHAR}, #{category,jdbcType=VARCHAR}, 
      #{item,jdbcType=VARCHAR}, #{gender,jdbcType=INTEGER}, #{pathNum,jdbcType=INTEGER}, 
      #{date,jdbcType=TIMESTAMP}, #{place,jdbcType=VARCHAR}, #{participantNum,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{created,jdbcType=TIMESTAMP}, #{updated,jdbcType=TIMESTAMP}, 
      #{description,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{typeId,jdbcType=BIGINT}, 
      #{rankCriterion,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.smartGym.pojo.Item">
    insert into item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="game != null">
        game,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="item != null">
        item,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="pathNum != null">
        path_num,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="place != null">
        place,
      </if>
      <if test="participantNum != null">
        participant_num,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="updated != null">
        updated,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="rankCriterion != null">
        rank_criterion,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="game != null">
        #{game,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        #{category,jdbcType=VARCHAR},
      </if>
      <if test="item != null">
        #{item,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="pathNum != null">
        #{pathNum,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="place != null">
        #{place,jdbcType=VARCHAR},
      </if>
      <if test="participantNum != null">
        #{participantNum,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=BIGINT},
      </if>
      <if test="rankCriterion != null">
        #{rankCriterion,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.smartGym.pojo.ItemExample" resultType="java.lang.Long">
    select count(*) from item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update item
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.game != null">
        game = #{record.game,jdbcType=VARCHAR},
      </if>
      <if test="record.category != null">
        category = #{record.category,jdbcType=VARCHAR},
      </if>
      <if test="record.item != null">
        item = #{record.item,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=INTEGER},
      </if>
      <if test="record.pathNum != null">
        path_num = #{record.pathNum,jdbcType=INTEGER},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=TIMESTAMP},
      </if>
      <if test="record.place != null">
        place = #{record.place,jdbcType=VARCHAR},
      </if>
      <if test="record.participantNum != null">
        participant_num = #{record.participantNum,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updated != null">
        updated = #{record.updated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.typeId != null">
        type_id = #{record.typeId,jdbcType=BIGINT},
      </if>
      <if test="record.rankCriterion != null">
        rank_criterion = #{record.rankCriterion,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update item
    set id = #{record.id,jdbcType=BIGINT},
      game = #{record.game,jdbcType=VARCHAR},
      category = #{record.category,jdbcType=VARCHAR},
      item = #{record.item,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=INTEGER},
      path_num = #{record.pathNum,jdbcType=INTEGER},
      date = #{record.date,jdbcType=TIMESTAMP},
      place = #{record.place,jdbcType=VARCHAR},
      participant_num = #{record.participantNum,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      created = #{record.created,jdbcType=TIMESTAMP},
      updated = #{record.updated,jdbcType=TIMESTAMP},
      description = #{record.description,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      type_id = #{record.typeId,jdbcType=BIGINT},
      rank_criterion = #{record.rankCriterion,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.smartGym.pojo.Item">
    update item
    <set>
      <if test="game != null">
        game = #{game,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=VARCHAR},
      </if>
      <if test="item != null">
        item = #{item,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="pathNum != null">
        path_num = #{pathNum,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="place != null">
        place = #{place,jdbcType=VARCHAR},
      </if>
      <if test="participantNum != null">
        participant_num = #{participantNum,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=BIGINT},
      </if>
      <if test="rankCriterion != null">
        rank_criterion = #{rankCriterion,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.smartGym.pojo.Item">
    update item
    set game = #{game,jdbcType=VARCHAR},
      category = #{category,jdbcType=VARCHAR},
      item = #{item,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      path_num = #{pathNum,jdbcType=INTEGER},
      date = #{date,jdbcType=TIMESTAMP},
      place = #{place,jdbcType=VARCHAR},
      participant_num = #{participantNum,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP},
      description = #{description,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      type_id = #{typeId,jdbcType=BIGINT},
      rank_criterion = #{rankCriterion,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
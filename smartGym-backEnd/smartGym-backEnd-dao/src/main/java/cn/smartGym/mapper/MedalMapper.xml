<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.smartGym.mapper.MedalMapper">
  <resultMap id="BaseResultMap" type="cn.smartGym.pojo.Medal">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="game" jdbcType="VARCHAR" property="game" />
    <result column="college" jdbcType="INTEGER" property="college" />
    <result column="first" jdbcType="INTEGER" property="first" />
    <result column="second" jdbcType="INTEGER" property="second" />
    <result column="third" jdbcType="INTEGER" property="third" />
    <result column="fourth" jdbcType="INTEGER" property="fourth" />
    <result column="fifth" jdbcType="INTEGER" property="fifth" />
    <result column="sixth" jdbcType="INTEGER" property="sixth" />
    <result column="seventh" jdbcType="INTEGER" property="seventh" />
    <result column="eighth" jdbcType="INTEGER" property="eighth" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="updated" jdbcType="TIMESTAMP" property="updated" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, game, college, first, second, third, fourth, fifth, sixth, seventh, eighth, status, 
    created, updated
  </sql>
  <select id="selectByExample" parameterType="cn.smartGym.pojo.MedalExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from medal
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from medal
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from medal
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.smartGym.pojo.MedalExample">
    delete from medal
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.smartGym.pojo.Medal">
    insert into medal (id, game, college, 
      first, second, third, 
      fourth, fifth, sixth, 
      seventh, eighth, status, 
      created, updated)
    values (#{id,jdbcType=BIGINT}, #{game,jdbcType=VARCHAR}, #{college,jdbcType=INTEGER}, 
      #{first,jdbcType=INTEGER}, #{second,jdbcType=INTEGER}, #{third,jdbcType=INTEGER}, 
      #{fourth,jdbcType=INTEGER}, #{fifth,jdbcType=INTEGER}, #{sixth,jdbcType=INTEGER}, 
      #{seventh,jdbcType=INTEGER}, #{eighth,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{created,jdbcType=TIMESTAMP}, #{updated,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.smartGym.pojo.Medal">
    insert into medal
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="game != null">
        game,
      </if>
      <if test="college != null">
        college,
      </if>
      <if test="first != null">
        first,
      </if>
      <if test="second != null">
        second,
      </if>
      <if test="third != null">
        third,
      </if>
      <if test="fourth != null">
        fourth,
      </if>
      <if test="fifth != null">
        fifth,
      </if>
      <if test="sixth != null">
        sixth,
      </if>
      <if test="seventh != null">
        seventh,
      </if>
      <if test="eighth != null">
        eighth,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="updated != null">
        updated,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="game != null">
        #{game,jdbcType=VARCHAR},
      </if>
      <if test="college != null">
        #{college,jdbcType=INTEGER},
      </if>
      <if test="first != null">
        #{first,jdbcType=INTEGER},
      </if>
      <if test="second != null">
        #{second,jdbcType=INTEGER},
      </if>
      <if test="third != null">
        #{third,jdbcType=INTEGER},
      </if>
      <if test="fourth != null">
        #{fourth,jdbcType=INTEGER},
      </if>
      <if test="fifth != null">
        #{fifth,jdbcType=INTEGER},
      </if>
      <if test="sixth != null">
        #{sixth,jdbcType=INTEGER},
      </if>
      <if test="seventh != null">
        #{seventh,jdbcType=INTEGER},
      </if>
      <if test="eighth != null">
        #{eighth,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        #{updated,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.smartGym.pojo.MedalExample" resultType="java.lang.Long">
    select count(*) from medal
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update medal
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.game != null">
        game = #{record.game,jdbcType=VARCHAR},
      </if>
      <if test="record.college != null">
        college = #{record.college,jdbcType=INTEGER},
      </if>
      <if test="record.first != null">
        first = #{record.first,jdbcType=INTEGER},
      </if>
      <if test="record.second != null">
        second = #{record.second,jdbcType=INTEGER},
      </if>
      <if test="record.third != null">
        third = #{record.third,jdbcType=INTEGER},
      </if>
      <if test="record.fourth != null">
        fourth = #{record.fourth,jdbcType=INTEGER},
      </if>
      <if test="record.fifth != null">
        fifth = #{record.fifth,jdbcType=INTEGER},
      </if>
      <if test="record.sixth != null">
        sixth = #{record.sixth,jdbcType=INTEGER},
      </if>
      <if test="record.seventh != null">
        seventh = #{record.seventh,jdbcType=INTEGER},
      </if>
      <if test="record.eighth != null">
        eighth = #{record.eighth,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updated != null">
        updated = #{record.updated,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update medal
    set id = #{record.id,jdbcType=BIGINT},
      game = #{record.game,jdbcType=VARCHAR},
      college = #{record.college,jdbcType=INTEGER},
      first = #{record.first,jdbcType=INTEGER},
      second = #{record.second,jdbcType=INTEGER},
      third = #{record.third,jdbcType=INTEGER},
      fourth = #{record.fourth,jdbcType=INTEGER},
      fifth = #{record.fifth,jdbcType=INTEGER},
      sixth = #{record.sixth,jdbcType=INTEGER},
      seventh = #{record.seventh,jdbcType=INTEGER},
      eighth = #{record.eighth,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      created = #{record.created,jdbcType=TIMESTAMP},
      updated = #{record.updated,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.smartGym.pojo.Medal">
    update medal
    <set>
      <if test="game != null">
        game = #{game,jdbcType=VARCHAR},
      </if>
      <if test="college != null">
        college = #{college,jdbcType=INTEGER},
      </if>
      <if test="first != null">
        first = #{first,jdbcType=INTEGER},
      </if>
      <if test="second != null">
        second = #{second,jdbcType=INTEGER},
      </if>
      <if test="third != null">
        third = #{third,jdbcType=INTEGER},
      </if>
      <if test="fourth != null">
        fourth = #{fourth,jdbcType=INTEGER},
      </if>
      <if test="fifth != null">
        fifth = #{fifth,jdbcType=INTEGER},
      </if>
      <if test="sixth != null">
        sixth = #{sixth,jdbcType=INTEGER},
      </if>
      <if test="seventh != null">
        seventh = #{seventh,jdbcType=INTEGER},
      </if>
      <if test="eighth != null">
        eighth = #{eighth,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.smartGym.pojo.Medal">
    update medal
    set game = #{game,jdbcType=VARCHAR},
      college = #{college,jdbcType=INTEGER},
      first = #{first,jdbcType=INTEGER},
      second = #{second,jdbcType=INTEGER},
      third = #{third,jdbcType=INTEGER},
      fourth = #{fourth,jdbcType=INTEGER},
      fifth = #{fifth,jdbcType=INTEGER},
      sixth = #{sixth,jdbcType=INTEGER},
      seventh = #{seventh,jdbcType=INTEGER},
      eighth = #{eighth,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>